{"version":3,"sources":["components/Feedback/Section.js","components/Feedback/FeedbackOptions.js","components/Feedback/Statistics.js","components/Feedback/Notification.js","components/Feedback/Feedback.js","components/App.js","index.js"],"names":["Section","title","children","FeedbackOptions","onLeaveFeedback","options","good","neutral","bad","onClick","name","type","Statistics","total","positivePercentage","style","display","flexDirection","Notification","message","Feedback","state","leaveFeedback","evt","target","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","React","Component","App","params","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAGaA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACrB,oCACE,4BAAKD,GACJC,I,OCHQC,EAAkB,SAAC,GAAD,IAC7BC,EAD6B,EAC7BA,gBAD6B,gBAE7BC,QAF6B,GAEnBC,EAFmB,KAEbC,EAFa,KAEJC,EAFI,YAI7B,oCACE,4BAAQC,QAASL,EAAiBM,KAAMJ,EAAMK,KAAK,UAChDL,GAEH,4BAAQG,QAASL,EAAiBM,KAAMH,EAASI,KAAK,UACnDJ,GAEH,4BAAQE,QAASL,EAAiBM,KAAMF,EAAKG,KAAK,UAC/CH,KCZMI,EAAa,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAMG,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,mBAAhB,OACxB,oCACE,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,WAC5C,uCAAaP,EAAKJ,MAClB,0CAAgBI,EAAKH,SACrB,sCAAYG,EAAKF,MAEnB,gDAAsBK,GACtB,8DAAoCC,KCR3BI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICGpCC,EAAb,4MACEC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEc,cAAgB,SAAAC,GACd,IAAIb,EAAOa,EAAIC,OAAOd,KACtB,EAAKe,UAAS,SAAAC,GAAI,sBAAQhB,EAAOgB,EAAKhB,GAAQ,OATlD,EAYEiB,mBAAqB,kBACnB,EAAKN,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,KAbtD,EAeEoB,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKT,MAAMf,KAAO,EAAKqB,qBAAwB,KAAO,KAhBtE,uDAkBY,IAAD,EACwBI,KAAKV,MAA5Bf,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CAASP,MAAO,yBACd,kBAAC,EAAD,CACEG,gBAAiB2B,KAAKT,cACtBjB,QAAS2B,OAAOC,KAAKF,KAAKV,UAI9B,kBAAC,EAAD,CAASpB,MAAO,aACbK,GAAQC,GAAWC,EAClB,kBAAC,EAAD,CACEE,KAAM,CAAEJ,OAAMC,UAASC,OACvBK,MAAOkB,KAAKJ,qBACZb,mBAAoBiB,KAAKH,oCAG3B,kBAAC,EAAD,CAAcT,QAAS,4BArCnC,GAA8Be,IAAMC,WCFvBC,EAAM,SAAAC,GAAM,OACvB,oCACE,kBAAC,EAAD,Q,MCDJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.0212887d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Section = ({ title, children }) => (\r\n  <>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const FeedbackOptions = ({\r\n  onLeaveFeedback,\r\n  options: [good, neutral, bad],\r\n}) => (\r\n  <>\r\n    <button onClick={onLeaveFeedback} name={good} type=\"submit\">\r\n      {good}\r\n    </button>\r\n    <button onClick={onLeaveFeedback} name={neutral} type=\"submit\">\r\n      {neutral}\r\n    </button>\r\n    <button onClick={onLeaveFeedback} name={bad} type=\"submit\">\r\n      {bad}\r\n    </button>\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Statistics = ({ name, total, positivePercentage }) => (\r\n  <>\r\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n      <span>Good: {name.good}</span>\r\n      <span>Neutral: {name.neutral}</span>\r\n      <span>Bad: {name.bad}</span>\r\n    </div>\r\n    <h3>Total feedbacks: {total}</h3>\r\n    <h3>Percent of positive feedbacks: {positivePercentage}</h3>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n  name: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport { Section } from './Section';\r\nimport { FeedbackOptions } from './FeedbackOptions';\r\nimport { Statistics } from './Statistics';\r\nimport { Notification } from './Notification';\r\n\r\nexport class Feedback extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  leaveFeedback = evt => {\r\n    let name = evt.target.name;\r\n    this.setState(prev => ({ [name]: prev[name] + 1 }));\r\n  };\r\n\r\n  countTotalFeedback = () =>\r\n    this.state.good + this.state.neutral + this.state.bad;\r\n\r\n  countPositiveFeedbackPercentage = () =>\r\n    Math.round((this.state.good / this.countTotalFeedback()) * 100) + '%';\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <>\r\n        <Section title={'Please leave feedback'}>\r\n          <FeedbackOptions\r\n            onLeaveFeedback={this.leaveFeedback}\r\n            options={Object.keys(this.state)}\r\n          />\r\n        </Section>\r\n\r\n        <Section title={'Statistic'}>\r\n          {good || neutral || bad ? (\r\n            <Statistics\r\n              name={{ good, neutral, bad }}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            ></Statistics>\r\n          ) : (\r\n            <Notification message={'No feedback given'} />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// export class Counter extends React.Component {\r\n//   static defaultProps = {\r\n//     step: 1,\r\n//   };\r\n\r\n//   leaveFeedback(evt) {}\r\n\r\n//   render() {\r\n//     const { step } = this.props;\r\n\r\n//     return (\r\n//       <div>\r\n//         <span>0</span>\r\n//         <button type=\"button\" onClick={this.leaveFeedback}>\r\n//           Increment by {step}\r\n//         </button>\r\n//         <button type=\"button\">Decrement by {step}</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// ReactDOM.render(<Counter step={5} />, document.getElementById('root'));\r\n","import React from 'react';\nimport { Feedback } from './Feedback/Feedback';\n// import { TextField } from './TextField';\n\nexport const App = params => (\n  <>\n    <Feedback />\n  </>\n);\n\n// class App extends React.Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   componentDidMount() {\n//     this.setState(prev => ({ ...prev, people: ['Ben', 'Bob'] }));\n//   }\n\n//   handleSubmit = evt => {\n//     evt.preventDefault();\n//     this.setState(prev => ({\n//       ...prev,\n//       contacts: [\n//         ...prev.contacts,\n//         { name: this.state.name, number: this.state.number },\n//       ],\n//     }));\n//     this.setState({ name: '', number: '' });\n//   };\n\n//   handleChange = ({ target: { name, value } }) => {\n//     this.setState(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\n//         <TextField\n//           label={'contacts'}\n//           handleChange={this.handleChange}\n//           value={name}\n//         />\n//         <TextField\n//           label={'number'}\n//           handleChange={this.handleChange}\n//           value={number}\n//         />\n//       </form>\n//     );\n//   }\n// }\n\n// const initialState = {\n//   contacts: [],\n//   name: '',\n//   number: '',\n// };\n\n// export function App() {\n//   const [state, setState] = React.useState({ ...initialState });\n\n//   const handleSubmit = evt => {\n//     evt.preventDefault();\n//     setState(prev => ({\n//       ...prev,\n//       contacts: [...prev.contacts, { name: state.name, number: state.number }],\n//     }));\n//     setState({ name: '', number: '' });\n//   };\n\n//   const handleChange = ({ target: { name, value } }) => {\n//     setState(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   return (\n//     <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n//       <TextField\n//         label={'contacts'}\n//         handleChange={handleChange}\n//         value={state.name}\n//       />\n//       <TextField\n//         label={'number'}\n//         handleChange={handleChange}\n//         value={state.number}\n//       />\n//     </form>\n//   );\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}